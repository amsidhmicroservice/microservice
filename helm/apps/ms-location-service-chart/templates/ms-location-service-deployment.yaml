apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{.Values.deployment.name}}
    version: {{.Values.version}}
  name: {{.Values.deployment.name}}
  namespace: {{.Values.namespace}}
spec:
  replicas: {{.Values.deployment.numberOfReplicas}}
  minReadySeconds: 45
  selector:
    matchLabels:
      app: {{.Values.deployment.name}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{.Values.deployment.name}}
        version: {{.Values.version}}
    spec:
      containers:
        - image: {{.Values.deployment.imageName}}
          imagePullPolicy: IfNotPresent
          name: {{.Values.deployment.name}}
          ports:
            - name: location-http
              containerPort: 8080
              protocol: TCP
          envFrom:
            - configMapRef:
                name: location-ms-configmap
            - secretRef:
                name: location-secret
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 8080
            failureThreshold: 5
            periodSeconds: 30
            initialDelaySeconds: 180
            timeoutSeconds: 30
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8080
            failureThreshold: 10
            periodSeconds: 120
            initialDelaySeconds: 240
            timeoutSeconds: 30
            successThreshold: 1

          resources:
            requests:
              memory: 512Mi
            limits:
              memory: 1024Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
